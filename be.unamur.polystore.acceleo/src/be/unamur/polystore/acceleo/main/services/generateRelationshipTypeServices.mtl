[comment encoding = UTF-8 /]
[module generateRelationshipTypeServices('http://www.unamur.be/polystore/Pml')]
[comment][import be::unamur::polystore::acceleo::main::generateRelationshipTypeClass /][/comment]
[import be::unamur::polystore::acceleo::main::util /]
[import be::unamur::polystore::acceleo::main::services::select::relationshiptype::generateBinaryWithAttributesSelectMethods /]
[import be::unamur::polystore::acceleo::main::services::select::relationshiptype::generateSelectMethods /]
[import be::unamur::polystore::acceleo::main::services::insert::relationshiptype::generateInsertMethods /]
[import be::unamur::polystore::acceleo::main::services::update::relationshiptype::generateUpdateMethods /]
[import be::unamur::polystore::acceleo::main::services::delete::relationshiptype::generateDeleteMethods /]

[template public generateRelationshipTypeServices(rel : RelationshipType, conceptualSchema: ConceptualSchema)]
[file ('src/main/java/dao/services/' + rel.name.toUpperFirst() + 'Service'.concat('.java'), false, 'UTF-8')]
package dao.services;

[generateImportDataset(rel)/]
[generateImportRow(rel)/]
[generateImportWrappedArray(rel)/]
import conditions.*;
import pojo.[rel.name.toUpperFirst()/];
import java.time.LocalDate;
import java.time.LocalDateTime;
import tdo.*;
import pojo.*;
import org.apache.commons.lang.mutable.MutableBoolean;
import java.util.List;
import java.util.ArrayList;
import org.apache.spark.sql.Column;
import org.apache.spark.sql.Encoders;
import org.apache.spark.api.java.function.MapFunction;
import util.*;


public abstract class [rel.name.toUpperFirst() + 'Service' /] {
	[instantiateLogger(rel.name.toUpperFirst() + 'Service') /]
[comment]	[if (isBinaryWithAttributes(rel))]
	[generateBinaryWithAttributesSelectMethods(rel) /]
	[/if]
	[if (isNAire(rel))]
	[generateNAireSelectMethods(rel) /]
	[/if][/comment]
	[generateSelectMethods(rel, conceptualSchema, false) /]
	[generateInsertMethods(rel, false) /]
	[generateUpdateMethods(rel, false) /]
	[generateDeleteMethods(rel, false) /]
}
[/file]
[/template]